generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/database/generated/schema"
  enumFileName = "enums.ts"
  fileName     = "schema.d.ts"
}

datasource db {
  provider     = "mysql"
  url          = env("PRISMA_URL")
  relationMode = "prisma"
}

model Commanda {
  id           String     @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  costumer     String     @db.VarChar(255)
  table        Int?
  restaurantId String     @map("restaurant_id") @db.VarChar(36)
  publicId     String     @unique @map("public_id") @db.VarChar(16)
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  orders       Order[]

  @@index([restaurantId])
  @@map("commanda")
}

model Employee {
  id       String        @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  username String        @unique @db.VarChar(255)
  email    String        @unique @db.VarChar(255)
  password String        @db.VarChar(255)
  publicId String        @unique @map("public_id") @db.VarChar(16)
  worksAt  Employement[]
  owns     Ownership[]

  @@map("employee")
}

model Employement {
  employeeId   String     @map("employee_id") @db.VarChar(36)
  restaurantId String     @map("restaurant_id") @db.VarChar(36)
  employee     Employee   @relation(fields: [employeeId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  @@id([employeeId, restaurantId])
  @@index([restaurantId])
  @@index([employeeId])
  @@map("employement")
}

model Item {
  id           String     @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  name         String     @db.VarChar(255)
  price        Int
  restaurantId String     @map("restaurant_id") @db.VarChar(36)
  publicId     String     @unique @map("public_id") @db.VarChar(16)
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  orders       Order[]

  @@index([name])
  @@index([restaurantId])
  @@map("item")
}

model Order {
  id           String     @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  commandaId   String     @map("commanda_id") @db.VarChar(36)
  itemId       String     @map("item_id") @db.VarChar(36)
  restaurantId String     @map("restaurant_id") @db.VarChar(36)
  quantity     Int        @default(1)
  priority     Priority   @default(low)
  status       Status     @default(pending)
  notes        String?    @db.VarChar(512)
  publicId     String     @unique @map("public_id") @db.VarChar(16)
  commanda     Commanda   @relation(fields: [commandaId], references: [id])
  item         Item       @relation(fields: [itemId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  @@index([itemId])
  @@index([commandaId])
  @@index([restaurantId])
  @@map("order")
}

model Ownership {
  ownerId      String     @map("owner_id") @db.VarChar(36)
  restaurantId String     @map("restaurant_id") @db.VarChar(36)
  owner        Employee   @relation(fields: [ownerId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  @@id([ownerId, restaurantId])
  @@index([restaurantId])
  @@index([ownerId])
  @@map("ownership")
}

model Restaurant {
  id           String        @id @default(dbgenerated("(uuid())")) @db.VarChar(36)
  name         String        @unique @db.VarChar(255)
  address      String        @db.VarChar(255)
  publicId     String        @unique @map("public_id") @db.VarChar(16)
  owners       Ownership[]
  employements Employement[]
  commandas    Commanda[]
  items        Item[]
  orders       Order[]

  @@map("restaurant")
}

enum Priority {
  low
  medium
  high

  @@map("priority")
}

enum Status {
  pending
  inProgress @map("in_progress")
  done

  @@map("status")
}
